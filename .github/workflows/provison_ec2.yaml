name: Provision t3.micro EC2

on:
  workflow_dispatch:
    inputs:
      ec2-name:
        description: EC2 name
        required: true
        default: 'App Server'
        type: string
jobs:
  provision-ec2:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: '${{ secrets.TF_USER_AWS_KEY }}'
          aws-secret-access-key: '${{ secrets.TF_USER_AWS_SECRET }}'
          aws-session-token: '${{ secrets.TF_AWS_SESSION_TOKEN }}'
          aws-region: us-east-1
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Terraform Apply
        id: apply
        env:
          TF_VAR_ec2_name:  "${{ github.event.inputs.ec2-name }}"
          BUCKET_NAME: gopi-ceq-tfstate-bucket
          TF_VAR_STATE_FILE: backup.tfstate
          
        run: |
          cd infra/
          terraform init -no-color -reconfigure -force-copy -backend-config="bucket=$BUCKET_NAME" -backend-config="key=${{ env.TF_VAR_STATE_FILE }}"  -backend-config="encrypt=true"
          terraform validate
          terraform plan 
          terraform apply -auto-approve
          echo "IP=$(terraform output Instance_IP)" >> $GITHUB_OUTPUT
#       - name: Save TF Output
#         run: terraform output Instance_IP
        
                 
      - run: echo "${{ steps.apply.outputs.IP }}" 
     
